<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--    关联数据库配置文件-->
    <context:property-placeholder location="classpath:dabaBase.properties"/>
    <!--使用spring管理数据源,
    dbcp:半自动化操作，不能自动连接
    c3p0：自动话操作（自动化加载配置文件，并且加载到对象中）
    企业级：druid,hikari
    -->
    <bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">
        <!--        连接数据库-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- c3p0连接池的私有属性 -->
        <!--        设置最大连接-->
        <property name="maxPoolSize" value="30"/>
        <!--        设置最小连接-->
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit(连接) -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--创建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 引入数据源(上面定义好的bean)-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 添加(绑定)Mapper.xml文件-->
        <property name="mapperLocations" value="classpath:com/hzj/dao/BookeMapper.xml"/>
        <!-- 引入mybatis-config.xml文件(当然，也可以省略这个配置文件全部用spring来实现)-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!--    spring-mybatis自带的，配置dao接口扫描包，动态创建对应的实现类并注入到容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.hzj.dao"/>
    </bean>

    <!-- 配置事务声明-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg ref="dataSource"/>
    </bean>



</beans>